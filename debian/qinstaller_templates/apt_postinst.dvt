#!/bin/sh

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
      set +e

      REPOFL1="/etc/apt/sources.list.d/50_q4os-chrome.list"
      if [ ! -f "$REPOFL1" ] || [ -n "$( head -n1 $REPOFL1 2>/dev/null | grep '##_not_configured_yet_##' )" ] ; then
        # echo "Q4OS-Chrome seems not to be configured, going to do so ..."
        QDSTRA="$( dash /usr/share/apps/q4os_system/bin/print_qaptdistr.sh )"
        echo "Distro [$QDSTRA], adding repositories, configuring ..."
        echo '###q4os-chrome repositories' > "$REPOFL1"
        if [ "$QDSTRA" = "bullseye" ] ; then
          echo 'deb [arch=amd64] http://q4os.org/qextrepo bullseye-chrome-cn main' >> "$REPOFL1"
        elif [ "$QDSTRA" = "bookworm" ] ; then
          echo 'deb [arch=amd64] http://q4os.org/qextrepo bookworm-chrome-cn main' >> "$REPOFL1"
        elif [ "$QDSTRA" = "trixie" ] ; then
          echo 'deb [arch=amd64] http://q4os.org/qextrepo trixie-chrome-cn main' >> "$REPOFL1"
        elif [ "$QDSTRA" = "jammy" ] ; then
          echo 'deb [arch=amd64] http://q4os.org/quarkext jammy-chrome-cn main' >> "$REPOFL1"
          echo '##deb [arch=amd64] http://quarkos.org/quarkext jammy-chrome-cn main' >> "$REPOFL1"
        elif [ "$QDSTRA" = "noble" ] ; then
          echo 'deb [arch=amd64] http://q4os.org/quarkext noble-chrome-cn main' >> "$REPOFL1"
          echo '##deb [arch=amd64] http://quarkos.org/quarkext noble-chrome-cn main' >> "$REPOFL1"
        else
          echo 'deb [arch=amd64] http://q4os.org/qextrepo bookworm-chrome-cn main' >> "$REPOFL1"
        fi
      fi

      echo "Copying master preferences ..."
      #todo: check to place master preferences in /etc/opt/chrome/ or /etc/default/chrome/ ??
      mkdir -p /opt/google/chrome /opt/google/chrome-beta /opt/google/chrome-unstable
      rm -f /opt/google/chrome/master_preferences /opt/google/chrome-beta/master_preferences /opt/google/chrome-unstable/master_preferences
      if [ "$QDSK_SESSION" = "trinity" ] ; then
        cp /opt/program_files/q4os-chrome/share/master_preferences.default.tde /opt/google/chrome/master_preferences
        cp /opt/program_files/q4os-chrome/share/master_preferences.default.tde /opt/google/chrome-beta/master_preferences
        cp /opt/program_files/q4os-chrome/share/master_preferences.default.tde /opt/google/chrome-unstable/master_preferences
      else
        cp /opt/program_files/q4os-chrome/share/master_preferences.default.general /opt/google/chrome/master_preferences
        cp /opt/program_files/q4os-chrome/share/master_preferences.default.general /opt/google/chrome-beta/master_preferences
        cp /opt/program_files/q4os-chrome/share/master_preferences.default.general /opt/google/chrome-unstable/master_preferences
      fi

      SSTAMPF1="/var/lib/dpkg/.q4os-chrome_install_aptstmp.stamp"
      if [ ! -f $SSTAMPF1 ] ; then
         echo "Ok, looks like an upgrade, exiting postinst now ...."
         exit 0
      fi
      rm -f $SSTAMPF1
      echo "Q4OS postinst message: This is new Google Chrome installation"

      #we need app icons in "/usr/local/share/icons/hicolor/" to display chrome icons in other desktops, for ex. kde-plasma
      #inspired from the google-chrome-stable package - add icons to the system icons:
      for ICONSIZE in 16 22 24 32 48 64 128 256 ; do
        DESTDIR1="/usr/local/share/icons/hicolor/${ICONSIZE}x${ICONSIZE}/apps"
        mkdir -p "$DESTDIR1"
        # echo "Copying >> /opt/program_files/q4os-chrome/icons_logo/product_logo_${ICONSIZE}.png >> $DESTDIR1/google-chrome.png"
        cp "/opt/program_files/q4os-chrome/icons_logo/product_logo_${ICONSIZE}.png" "$DESTDIR1/google-chrome.png"
      done

      #configure chrome to re-create repos file in sources.list.d after new install
      #if repo_add_once="true", cron.daily/google-chrome forcibly create google chrome repository in sources.list.d, then set "repo_add_once" to false
      echo "Enabling Chrome to re-create repositories ..."
      sed -i -e 's/[[:space:]]*repo_add_once=.*/repo_add_once="true"/' /etc/default/google-chrome
      # sed -i -e 's/[[:space:]]*repo_reenable_on_distupgrade=.*/repo_reenable_on_distupgrade="false"/' /etc/default/google-chrome

      echo "Setting Google Chrome default web browser ..."
      dash /usr/share/apps/q4os_system/bin/set_default_browser.sh "chrome"

      # echo "creating shortcuts and menus .."
      # mkdir -p /usr/share/apps/q4os_system/q4os_menus_applications_merged ) #needed for installing chrome on live media
      # mkdir -p /opt/trinity/share/apps/kdesktop/Desktop ) #needed for installing chrome on live media
      # cp -f /opt/program_files/q4os-chrome/share/arch_app.menu.amd64 /usr/share/apps/q4os_system/q4os_menus_applications_merged/q4os-chrome_q4app.menu
      # cp -f /opt/program_files/q4os-chrome/share/arch_app2.desktop.amd64 /opt/trinity/share/apps/kdesktop/Desktop/q4os-chrome_q4dsk.desktop

      set -e
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

exit 0
